{"ast":null,"code":"var _jsxFileName = \"/Users/ridhoizzulhaq/ai-nft-minting-dapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Web3 from \"web3\";\nimport contractABI from \"./abi/PromptABI.json\"; // Gantilah dengan ABI yang benar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"YOUR_CONTRACT_ADDRESS\"; // Gantilah dengan alamat kontrak Prompt\nconst modelId = 11;\nconst App = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [requestId, setRequestId] = useState(null);\n  const [mintedData, setMintedData] = useState(null);\n  const initWeb3 = async () => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const accounts = await web3Instance.eth.getAccounts();\n      const contractInstance = new web3Instance.eth.Contract(contractABI, contractAddress);\n      setWeb3(web3Instance);\n      setContract(contractInstance);\n      setAccount(accounts[0]);\n    } else {\n      alert(\"Metamask not detected!\");\n    }\n  };\n  const handleCalculateAIResult = async () => {\n    if (!contract || !account) {\n      alert(\"Please connect to Metamask first.\");\n      return;\n    }\n    try {\n      const formattedPrompt = `(prompt no line format) one tagline about : ${prompt}`;\n      const tx = await contract.methods.calculateAIResult(modelId, formattedPrompt).send({\n        from: account,\n        value: \"10170000000000000\"\n      });\n      const event = tx.events.PromptRequest;\n      if (event) {\n        setRequestId(event.returnValues.requestId);\n        alert(`AI Calculation Requested! Request ID: ${event.returnValues.requestId}`);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Transaction failed!\");\n    }\n  };\n  const handleMintWithAIResult = async () => {\n    if (!contract || !account || !requestId) {\n      alert(\"Request ID not found. Please generate AI result first.\");\n      return;\n    }\n    try {\n      const tx = await contract.methods.mintWithAIResult(requestId).send({\n        from: account\n      });\n      const mintedEvent = tx.events.MintedWithAI;\n      const uriEvent = tx.events.MintedWithURI;\n      if (mintedEvent && uriEvent) {\n        const mintedDetails = {\n          to: uriEvent.returnValues.to,\n          tokenId: uriEvent.returnValues.tokenId,\n          uri: uriEvent.returnValues.uri\n        };\n        setMintedData(mintedDetails);\n        alert(`NFT Minted! Token ID: ${mintedDetails.tokenId}`);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Minting failed!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Tagline 7007\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mb-3\",\n      onClick: initWeb3,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter your tagline topic...\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success me-2\",\n      onClick: handleCalculateAIResult,\n      children: \"Generate AI Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: handleMintWithAIResult,\n      disabled: !requestId,\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), mintedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-3 border rounded bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Minted NFT Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }, this), \" \", mintedData.to]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Token ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 14\n        }, this), \" \", mintedData.tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"URI:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 14\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: mintedData.uri,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: mintedData.uri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gdlKw8p+IhO/pEgnh1oAvy60fDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Web3","contractABI","jsxDEV","_jsxDEV","contractAddress","modelId","App","_s","prompt","setPrompt","web3","setWeb3","contract","setContract","account","setAccount","requestId","setRequestId","mintedData","setMintedData","initWeb3","window","ethereum","web3Instance","request","method","accounts","eth","getAccounts","contractInstance","Contract","alert","handleCalculateAIResult","formattedPrompt","tx","methods","calculateAIResult","send","from","value","event","events","PromptRequest","returnValues","error","console","handleMintWithAIResult","mintWithAIResult","mintedEvent","MintedWithAI","uriEvent","MintedWithURI","mintedDetails","to","tokenId","uri","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","disabled","href","rel","_c","$RefreshReg$"],"sources":["/Users/ridhoizzulhaq/ai-nft-minting-dapp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Web3 from \"web3\";\nimport contractABI from \"./abi/PromptABI.json\"; // Gantilah dengan ABI yang benar\n\nconst contractAddress = \"YOUR_CONTRACT_ADDRESS\"; // Gantilah dengan alamat kontrak Prompt\nconst modelId = 11;\n\nconst App = () => {\n  const [prompt, setPrompt] = useState(\"\");\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [requestId, setRequestId] = useState(null);\n  const [mintedData, setMintedData] = useState(null);\n\n  const initWeb3 = async () => {\n    if (window.ethereum) {\n      const web3Instance = new Web3(window.ethereum);\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      const accounts = await web3Instance.eth.getAccounts();\n      const contractInstance = new web3Instance.eth.Contract(contractABI, contractAddress);\n\n      setWeb3(web3Instance);\n      setContract(contractInstance);\n      setAccount(accounts[0]);\n    } else {\n      alert(\"Metamask not detected!\");\n    }\n  };\n\n  const handleCalculateAIResult = async () => {\n    if (!contract || !account) {\n      alert(\"Please connect to Metamask first.\");\n      return;\n    }\n\n    try {\n      const formattedPrompt = `(prompt no line format) one tagline about : ${prompt}`;\n      const tx = await contract.methods.calculateAIResult(modelId, formattedPrompt).send({ from: account, value: \"10170000000000000\" });\n      const event = tx.events.PromptRequest;\n      if (event) {\n        setRequestId(event.returnValues.requestId);\n        alert(`AI Calculation Requested! Request ID: ${event.returnValues.requestId}`);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Transaction failed!\");\n    }\n  };\n\n  const handleMintWithAIResult = async () => {\n    if (!contract || !account || !requestId) {\n      alert(\"Request ID not found. Please generate AI result first.\");\n      return;\n    }\n\n    try {\n      const tx = await contract.methods.mintWithAIResult(requestId).send({ from: account });\n      const mintedEvent = tx.events.MintedWithAI;\n      const uriEvent = tx.events.MintedWithURI;\n      if (mintedEvent && uriEvent) {\n        const mintedDetails = {\n          to: uriEvent.returnValues.to,\n          tokenId: uriEvent.returnValues.tokenId,\n          uri: uriEvent.returnValues.uri,\n        };\n        setMintedData(mintedDetails);\n        alert(`NFT Minted! Token ID: ${mintedDetails.tokenId}`);\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Minting failed!\");\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2 className=\"text-center mb-4\">Tagline 7007</h2>\n      <button className=\"btn btn-primary mb-3\" onClick={initWeb3}>Connect Wallet</button>\n      <div className=\"mb-3\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Enter your tagline topic...\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n        />\n      </div>\n      <button className=\"btn btn-success me-2\" onClick={handleCalculateAIResult}>Generate AI Result</button>\n      <button className=\"btn btn-warning\" onClick={handleMintWithAIResult} disabled={!requestId}>Mint NFT</button>\n\n      {mintedData && (\n        <div className=\"mt-4 p-3 border rounded bg-light\">\n          <h4>Minted NFT Details</h4>\n          <p><strong>To:</strong> {mintedData.to}</p>\n          <p><strong>Token ID:</strong> {mintedData.tokenId}</p>\n          <p><strong>URI:</strong> <a href={mintedData.uri} target=\"_blank\" rel=\"noopener noreferrer\">{mintedData.uri}</a></p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,WAAW,MAAM,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAG,uBAAuB,CAAC,CAAC;AACjD,MAAMC,OAAO,GAAG,EAAE;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMqB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMC,YAAY,GAAG,IAAIvB,IAAI,CAACqB,MAAM,CAACC,QAAQ,CAAC;MAC9C,MAAMD,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChE,MAAMC,QAAQ,GAAG,MAAMH,YAAY,CAACI,GAAG,CAACC,WAAW,CAAC,CAAC;MACrD,MAAMC,gBAAgB,GAAG,IAAIN,YAAY,CAACI,GAAG,CAACG,QAAQ,CAAC7B,WAAW,EAAEG,eAAe,CAAC;MAEpFO,OAAO,CAACY,YAAY,CAAC;MACrBV,WAAW,CAACgB,gBAAgB,CAAC;MAC7Bd,UAAU,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACLK,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1C,IAAI,CAACpB,QAAQ,IAAI,CAACE,OAAO,EAAE;MACzBiB,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IAEA,IAAI;MACF,MAAME,eAAe,GAAG,+CAA+CzB,MAAM,EAAE;MAC/E,MAAM0B,EAAE,GAAG,MAAMtB,QAAQ,CAACuB,OAAO,CAACC,iBAAiB,CAAC/B,OAAO,EAAE4B,eAAe,CAAC,CAACI,IAAI,CAAC;QAAEC,IAAI,EAAExB,OAAO;QAAEyB,KAAK,EAAE;MAAoB,CAAC,CAAC;MACjI,MAAMC,KAAK,GAAGN,EAAE,CAACO,MAAM,CAACC,aAAa;MACrC,IAAIF,KAAK,EAAE;QACTvB,YAAY,CAACuB,KAAK,CAACG,YAAY,CAAC3B,SAAS,CAAC;QAC1Ce,KAAK,CAAC,yCAAyCS,KAAK,CAACG,YAAY,CAAC3B,SAAS,EAAE,CAAC;MAChF;IACF,CAAC,CAAC,OAAO4B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBb,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMe,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI,CAAClC,QAAQ,IAAI,CAACE,OAAO,IAAI,CAACE,SAAS,EAAE;MACvCe,KAAK,CAAC,wDAAwD,CAAC;MAC/D;IACF;IAEA,IAAI;MACF,MAAMG,EAAE,GAAG,MAAMtB,QAAQ,CAACuB,OAAO,CAACY,gBAAgB,CAAC/B,SAAS,CAAC,CAACqB,IAAI,CAAC;QAAEC,IAAI,EAAExB;MAAQ,CAAC,CAAC;MACrF,MAAMkC,WAAW,GAAGd,EAAE,CAACO,MAAM,CAACQ,YAAY;MAC1C,MAAMC,QAAQ,GAAGhB,EAAE,CAACO,MAAM,CAACU,aAAa;MACxC,IAAIH,WAAW,IAAIE,QAAQ,EAAE;QAC3B,MAAME,aAAa,GAAG;UACpBC,EAAE,EAAEH,QAAQ,CAACP,YAAY,CAACU,EAAE;UAC5BC,OAAO,EAAEJ,QAAQ,CAACP,YAAY,CAACW,OAAO;UACtCC,GAAG,EAAEL,QAAQ,CAACP,YAAY,CAACY;QAC7B,CAAC;QACDpC,aAAa,CAACiC,aAAa,CAAC;QAC5BrB,KAAK,CAAC,yBAAyBqB,aAAa,CAACE,OAAO,EAAE,CAAC;MACzD;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBb,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;EAED,oBACE5B,OAAA;IAAKqD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BtD,OAAA;MAAIqD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClD1D,OAAA;MAAQqD,SAAS,EAAC,sBAAsB;MAACM,OAAO,EAAE1C,QAAS;MAAAqC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnF1D,OAAA;MAAKqD,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBtD,OAAA;QACE4D,IAAI,EAAC,MAAM;QACXP,SAAS,EAAC,cAAc;QACxBQ,WAAW,EAAC,6BAA6B;QACzCzB,KAAK,EAAE/B,MAAO;QACdyD,QAAQ,EAAGC,CAAC,IAAKzD,SAAS,CAACyD,CAAC,CAACC,MAAM,CAAC5B,KAAK;MAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1D,OAAA;MAAQqD,SAAS,EAAC,sBAAsB;MAACM,OAAO,EAAE9B,uBAAwB;MAAAyB,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtG1D,OAAA;MAAQqD,SAAS,EAAC,iBAAiB;MAACM,OAAO,EAAEhB,sBAAuB;MAACsB,QAAQ,EAAE,CAACpD,SAAU;MAAAyC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE3G3C,UAAU,iBACTf,OAAA;MAAKqD,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/CtD,OAAA;QAAAsD,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B1D,OAAA;QAAAsD,QAAA,gBAAGtD,OAAA;UAAAsD,QAAA,EAAQ;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC3C,UAAU,CAACmC,EAAE;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C1D,OAAA;QAAAsD,QAAA,gBAAGtD,OAAA;UAAAsD,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC3C,UAAU,CAACoC,OAAO;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtD1D,OAAA;QAAAsD,QAAA,gBAAGtD,OAAA;UAAAsD,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,eAAA1D,OAAA;UAAGkE,IAAI,EAAEnD,UAAU,CAACqC,GAAI;UAACY,MAAM,EAAC,QAAQ;UAACG,GAAG,EAAC,qBAAqB;UAAAb,QAAA,EAAEvC,UAAU,CAACqC;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtD,EAAA,CA9FID,GAAG;AAAAiE,EAAA,GAAHjE,GAAG;AAgGT,eAAeA,GAAG;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}